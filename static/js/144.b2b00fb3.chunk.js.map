{"version":3,"file":"static/js/144.b2b00fb3.chunk.js","mappings":"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","sources":["components/LoginForm/LogintForm.styled.js","components/LoginForm/LoginForm.js","pages/Login.js"],"sourcesContent":["import {\n  Form as FormikForm,\n  Field as FormikField,\n  ErrorMessage as FormikError,\n} from 'formik';\nimport { NavLink } from 'react-router-dom';\nimport styled from 'styled-components';\n\nexport const IconWrap = styled.div`\n  width: 60px;\n  height: 60px;\n  background-color: ${p => p.theme.colors.lightblue};\n  border-radius: 50%;\n  margin: 0 auto;\n\n  display: flex;\n  align-items: center;\n  justify-content: center;\n`;\n\nexport const LogTitle = styled.h2`\n  margin: 0 auto;\n  text-align: center;\n`;\n\nexport const FormContainer = styled.div`\n  max-width: 600px;\n  padding: 16px 32px;\n  margin: 0 auto;\n`;\n\nexport const Form = styled(FormikForm)`\n  display: flex;\n  flex-direction: column;\n  gap: 8px;\n`;\n\nexport const Field = styled(FormikField)`\n  padding: ${p => p.theme.spacing(2)};\n  font: inherit;\n  border-radius: ${p => p.theme.radii.sm};\n  border: 1px solid ${p => p.theme.colors.grey};\n  background-color: ${p => p.theme.colors.lightgray};\n`;\n\nexport const FormGroup = styled.label`\n  display: flex;\n  flex-direction: column;\n  gap: 4px;\n`;\n\nexport const ErrorMessage = styled(FormikError)`\n  color: ${p => p.theme.colors.red};\n  font-size: 14px;\n`;\n\nexport const FormButton = styled.button`\n  display: block;\n  margin: 0 auto;\n  min-width: 100px;\n  color: ${p => p.theme.colors.black};\n  background-color: ${p => p.theme.colors.blue};\n  border-radius: ${p => p.theme.radii.md};\n  border: 1px solid rgba(0, 0, 0, 0.15);\n  padding: ${p => p.theme.spacing(2)};\n  box-shadow: 0px 4px 4px rgba(0, 0, 0, 0.15);\n  cursor: pointer;\n  font-weight: 500;\n  font-size: 16px;\n  transition: background-color 250ms cubic-bezier(0.4, 0, 0.2, 1);\n\n  &:hover {\n    background-color: ${p => p.theme.colors.active};\n  }\n`;\n\nexport const MainLink = styled(NavLink)`\n  color: ${p => p.theme.colors.blue};\n  font-size: 14px;\n  font-weight: 500;\n`;\n","import { useDispatch, useSelector } from 'react-redux';\nimport { logIn } from '../../redux/auth/operations';\nimport { Formik } from 'formik';\nimport * as Yup from 'yup';\nimport toast from 'react-hot-toast';\nimport {\n  IconWrap,\n  LogTitle,\n  FormContainer,\n  Form,\n  Field,\n  FormGroup,\n  ErrorMessage,\n  FormButton,\n  MainLink,\n} from './LogintForm.styled';\nimport { selectError } from '../../redux/auth/selectors';\nimport { CiLock } from 'react-icons/ci';\n\nconst loginSchema = Yup.object().shape({\n  email: Yup.string().email().required('Required'),\n  password: Yup.string().min(7, 'Too Short!').required('Required'),\n});\n\nexport const LoginForm = () => {\n  const dispatch = useDispatch();\n  const error = useSelector(selectError);\n\n  return (\n    <>\n      <FormContainer>\n        <IconWrap>\n          <CiLock\n            style={{\n              width: '40px',\n              height: '40px',\n            }}\n          />\n        </IconWrap>\n        <LogTitle>Log In</LogTitle>\n        <Formik\n          initialValues={{ email: '', password: '' }}\n          validationSchema={loginSchema}\n          onSubmit={(values, actions) => {\n            dispatch(logIn(values));\n            actions.resetForm();\n          }}\n        >\n          <Form>\n            <FormGroup>\n              Email\n              <Field type=\"email\" name=\"email\" />\n              <ErrorMessage name=\"email\" component=\"span\" />\n            </FormGroup>\n\n            <FormGroup>\n              Password\n              <Field type=\"password\" name=\"password\" />\n              <ErrorMessage name=\"password\" component=\"span\" />\n            </FormGroup>\n\n            <FormButton type=\"submit\">Log in</FormButton>\n          </Form>\n        </Formik>\n        <MainLink to=\"/register\">Don't have an account? Register</MainLink>\n      </FormContainer>\n      {error &&\n        toast.error(\n          'Something went wrong! Please check your details and try again.'\n        )}\n    </>\n  );\n};\n","import { LoginForm } from '../components/LoginForm/LoginForm';\n\nexport default function Login() {\n  return (\n    <div>\n      <title>Login</title>\n      <LoginForm />\n    </div>\n  );\n}\n"],"names":["IconWrap","styled","_templateObject","_taggedTemplateLiteral","p","theme","colors","lightblue","LogTitle","_templateObject2","FormContainer","_templateObject3","Form","FormikForm","_templateObject4","Field","FormikField","_templateObject5","spacing","radii","sm","grey","lightgray","FormGroup","_templateObject6","ErrorMessage","FormikError","_templateObject7","red","FormButton","_templateObject8","black","blue","md","active","MainLink","NavLink","_templateObject9","loginSchema","Yup","shape","email","required","password","min","LoginForm","dispatch","useDispatch","error","useSelector","selectError","_jsxs","_Fragment","children","_jsx","CiLock","style","width","height","Formik","initialValues","validationSchema","onSubmit","values","actions","logIn","resetForm","type","name","component","to","toast","Login"],"sourceRoot":""}
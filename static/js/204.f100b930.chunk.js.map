{"version":3,"file":"static/js/204.f100b930.chunk.js","mappings":"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","sources":["components/ContactForm/ContactForm.styled.js","redux/contacts/selectors.js","components/ContactForm/ContactForm.js","components/ContactsList/ContactsList.styled.js","components/ContactCard/ContactCard.styled.js","components/ContactCard/ContactCard.js","components/ContactsList/ContactsList.js","components/Filter/Filter.styled.js","components/Filter/Filter.js","components/Error/Error.styled.js","components/Error/Error.js","pages/Contacts.js"],"sourcesContent":["import {\n  Form as FormikForm,\n  Field as FormikField,\n  ErrorMessage as FormikError,\n} from 'formik';\nimport styled from 'styled-components';\n\nexport const FormContainer = styled.div`\n  max-width: 600px;\n  padding: 16px 32px;\n  margin: 0 auto;\n`;\nexport const TitleForm = styled.h2`\n  display: block;\n  text-align: center;\n  font-weight: 700;\n  font-size: 40px;\n  margin: 0 auto;\n`;\n\nexport const Form = styled(FormikForm)`\n  display: flex;\n  flex-direction: column;\n  gap: 8px;\n`;\n\nexport const Field = styled(FormikField)`\n  padding: ${p => p.theme.spacing(2)};\n  font: inherit;\n  border-radius: ${p => p.theme.radii.sm};\n  border: 1px solid ${p => p.theme.colors.grey};\n  background-color: ${p => p.theme.colors.lightgray};\n`;\n\nexport const FormGroup = styled.label`\n  display: flex;\n  flex-direction: column;\n  gap: 4px;\n`;\n\nexport const ErrorMessage = styled(FormikError)`\n  color: ${p => p.theme.colors.red};\n  font-size: 14px;\n`;\n\nexport const FormButton = styled.button`\n  display: block;\n  margin: 0 auto;\n  min-width: 100px;\n  color: ${p => p.theme.colors.black};\n  background-color: ${p => p.theme.colors.blue};\n  border-radius: ${p => p.theme.radii.lg};\n  border: none;\n  padding: ${p => p.theme.spacing(3)};\n  box-shadow: 0px 4px 4px rgba(0, 0, 0, 0.15);\n  cursor: pointer;\n  font-weight: 500;\n  font-size: 16px;\n  transition: background-color 250ms cubic-bezier(0.4, 0, 0.2, 1);\n\n  &:hover {\n    background-color: ${p => p.theme.colors.active};\n  }\n`;\n","import { createSelector } from '@reduxjs/toolkit';\n\nexport const selectContacts = state => state.contacts.items;\n\nexport const selectIsLoading = state => state.contacts.isLoading;\n\nexport const selectError = state => state.contacts.error;\n\nexport const selectFilter = state => state.filters.filters;\n\nexport const selectVisibleContacts = createSelector(\n  [selectContacts, selectFilter],\n  (contacts, filter) => {\n    return contacts.filter(contact =>\n      contact.name.toLocaleLowerCase().includes(filter.toLocaleLowerCase())\n    );\n  }\n);\n","import { useDispatch, useSelector } from 'react-redux';\nimport { Formik } from 'formik';\nimport * as Yup from 'yup';\nimport toast from 'react-hot-toast';\nimport {\n  FormContainer,\n  TitleForm,\n  Form,\n  Field,\n  FormGroup,\n  ErrorMessage,\n  FormButton,\n} from './ContactForm.styled';\nimport { addContact } from '../../redux/contacts/operations';\nimport { selectContacts } from '../../redux/contacts/selectors';\nimport { FaPhone } from 'react-icons/fa';\n\nconst formSchema = Yup.object().shape({\n  name: Yup.string().min(2, 'Too Short!').required('Required'),\n  number: Yup.string()\n    .matches(\n      /^(\\d{2,}-\\d{2,}-\\d{2,}|\\d{2,}-\\d{2,}|\\d{5,})$/,\n      'Phone number is not valid. Min 7 numbers (101-01-01)'\n    )\n    .required('Required'),\n});\n\nexport const ContactForm = () => {\n  const dispatch = useDispatch();\n  const contacts = useSelector(selectContacts);\n\n  return (\n    <FormContainer>\n      <TitleForm>\n        Phonebook{' '}\n        <FaPhone\n          style={{\n            width: '30px',\n            height: '30px',\n          }}\n        />\n      </TitleForm>\n      <Formik\n        initialValues={{ name: '', number: '' }}\n        validationSchema={formSchema}\n        onSubmit={(values, actions) => {\n          if (\n            contacts.find(\n              contact =>\n                contact.name.toLocaleLowerCase() ===\n                values.name.toLocaleLowerCase()\n            )\n          ) {\n            return toast.error(`${values.name} is olready in your contacts`);\n          }\n          dispatch(addContact(values));\n          actions.resetForm();\n        }}\n      >\n        <Form>\n          <FormGroup>\n            Name\n            <Field type=\"text\" name=\"name\" />\n            <ErrorMessage name=\"name\" component=\"span\" />\n          </FormGroup>\n\n          <FormGroup>\n            Number\n            <Field type=\"tel\" name=\"number\" />\n            <ErrorMessage name=\"number\" component=\"span\" />\n          </FormGroup>\n\n          <FormButton type=\"submit\">Add contact</FormButton>\n        </Form>\n      </Formik>\n    </FormContainer>\n  );\n};\n","import styled from 'styled-components';\n\nexport const ContactsWraper = styled.div`\n  max-width: 600px;\n  padding: 16px 32px;\n  margin: 0 auto;\n  min-height: 100%;\n`;\n\nexport const List = styled.ul`\n  list-style: none;\n  padding-inline-start: 0;\n  display: grid;\n  grid-template-columns: 1fr;\n  grid-gap: 12px;\n`;\n\nexport const ListItem = styled.li`\n  font-weight: 500;\n  font-size: 18px;\n`;\n","import styled from 'styled-components';\n\nexport const DeleteBtn = styled.button`\n  min-width: 60px;\n  color: ${p => p.theme.colors.black};\n  background-color: ${p => p.theme.colors.lightblue};\n  border-radius: ${p => p.theme.radii.md};\n  border: none;\n  padding: ${p => p.theme.spacing(1)};\n  cursor: pointer;\n  font-weight: 400;\n  font-size: 12px;\n  transition: background-color 250ms cubic-bezier(0.4, 0, 0.2, 1);\n  display: flex;\n  align-items: center;\n  justify-content: center;\n\n  &:hover {\n    background-color: ${p => p.theme.colors.blue};\n  }\n`;\n\nexport const ContactWraper = styled.div`\n  display: grid;\n  grid-template-columns: 1fr 1fr 100px;\n  border-bottom: 1px solid rgba(0, 0, 0, 0.15);\n`;\n","import { useDispatch } from 'react-redux';\nimport { RiContactsLine } from 'react-icons/ri';\nimport { deleteContact } from '../../redux/contacts/operations';\nimport { DeleteBtn, ContactWraper } from './ContactCard.styled';\nimport { MdOutlineDeleteForever } from 'react-icons/md';\n\nexport const ContactCard = ({ contact: { id, name, number } }) => {\n  const dispatch = useDispatch();\n  const handleDelete = () => dispatch(deleteContact(id));\n\n  return (\n    <ContactWraper>\n      <span>\n        <RiContactsLine /> {name}\n      </span>\n      <span>{number} </span>\n      <DeleteBtn onClick={handleDelete}>\n        Delete{' '}\n        <MdOutlineDeleteForever\n          style={{\n            width: '40px',\n            height: '20px',\n          }}\n        />\n      </DeleteBtn>\n    </ContactWraper>\n  );\n};\n","import { useSelector } from 'react-redux';\nimport { List, ListItem, ContactsWraper } from './ContactsList.styled';\nimport { ContactCard } from '../ContactCard/ContactCard';\nimport { selectVisibleContacts } from '../../redux/contacts/selectors';\n\nexport const ContactsList = () => {\n  const items = useSelector(selectVisibleContacts);\n\n  return (\n    <ContactsWraper>\n      <List>\n        {items.map(item => (\n          <ListItem key={item.id}>\n            <ContactCard contact={item} />\n          </ListItem>\n        ))}\n      </List>\n    </ContactsWraper>\n  );\n};\n","import styled from 'styled-components';\n\nexport const FilterContainer = styled.div`\n  max-width: 600px;\n  padding: 16px 32px;\n  margin: 0 auto;\n  text-align: center;\n`;\n\nexport const FindGroup = styled.label`\n  display: flex;\n  flex-direction: column;\n  gap: 4px;\n`;\nexport const Findinput = styled.input`\n  padding: ${p => p.theme.spacing(2)};\n  font: inherit;\n  border-radius: ${p => p.theme.radii.sm};\n  border: 1px solid ${p => p.theme.colors.grey};\n  background-color: ${p => p.theme.colors.lightgray};\n`;\n","import { FilterContainer, FindGroup, Findinput } from './Filter.styled';\nimport { useDispatch } from 'react-redux';\nimport { findContact } from '../../redux/contacts/filterSlice';\n\nexport const Filter = () => {\n  const dispatch = useDispatch();\n  const handleFilter = filters => dispatch(findContact(filters));\n\n  return (\n    <FilterContainer>\n      <FindGroup>\n        Find contacts by name:\n        <Findinput\n          type=\"text\"\n          name=\"filters\"\n          onChange={evt => handleFilter(evt.target.value)}\n        />\n      </FindGroup>\n    </FilterContainer>\n  );\n};\n","import styled from 'styled-components';\n\nexport const Warning = styled.b`\n  color: ${p => p.theme.colors.red};\n  font-size: 16px;\n  font-weight: 500;\n`;\nexport const ErrorWraper = styled.div`\n  max-width: 600px;\n  padding: 16px 32px;\n  margin: 0 auto;\n  text-align: center;\n`;\n","import { Warning, ErrorWraper } from './Error.styled';\n\nexport const Error = ({ children }) => {\n  return (\n    <ErrorWraper>\n      <Warning>{children}</Warning>\n    </ErrorWraper>\n  );\n};\n","import { ContactForm } from '../components/ContactForm/ContactForm';\nimport { ContactsList } from '../components/ContactsList/ContactsList';\nimport { Filter } from '../components/Filter/Filter';\nimport { useEffect } from 'react';\nimport { useDispatch, useSelector } from 'react-redux';\nimport {\n  selectIsLoading,\n  selectError,\n  selectContacts,\n} from '../redux/contacts/selectors';\nimport { fetchContacts } from '../redux/contacts/operations';\nimport { Loader } from '../components/Loader/Loader';\nimport { Error } from '../components/Error/Error';\n\nexport default function Contacts() {\n  const dispatch = useDispatch();\n  const isLoading = useSelector(selectIsLoading);\n  const error = useSelector(selectError);\n  const contacts = useSelector(selectContacts);\n\n  useEffect(() => {\n    dispatch(fetchContacts());\n  }, [dispatch]);\n\n  return (\n    <div>\n      <ContactForm />\n      <Filter />\n      {isLoading && !error && <Loader />}\n      {error && (\n        <Error>\n          Oops! Something went wrong! Please try reloading this page!\n        </Error>\n      )}\n      {contacts.length > 0 && <ContactsList />}\n    </div>\n  );\n}\n"],"names":["FormContainer","styled","_templateObject","_taggedTemplateLiteral","TitleForm","_templateObject2","Form","FormikForm","_templateObject3","Field","FormikField","_templateObject4","p","theme","spacing","radii","sm","colors","grey","lightgray","FormGroup","_templateObject5","ErrorMessage","FormikError","_templateObject6","red","FormButton","_templateObject7","black","blue","lg","active","selectContacts","state","contacts","items","selectIsLoading","isLoading","selectError","error","selectVisibleContacts","createSelector","filters","filter","contact","name","toLocaleLowerCase","includes","formSchema","Yup","shape","min","required","number","matches","ContactForm","dispatch","useDispatch","useSelector","_jsxs","children","_jsx","FaPhone","style","width","height","Formik","initialValues","validationSchema","onSubmit","values","actions","find","toast","concat","addContact","resetForm","type","component","ContactsWraper","List","ListItem","DeleteBtn","lightblue","md","ContactWraper","ContactCard","_ref","_ref$contact","id","RiContactsLine","onClick","deleteContact","MdOutlineDeleteForever","ContactsList","map","item","FilterContainer","FindGroup","Findinput","Filter","onChange","evt","target","value","findContact","Warning","ErrorWraper","Error","Contacts","useEffect","fetchContacts","Loader","length"],"sourceRoot":""}